#version 400 core

in vec3 v_position;
in vec2 v_textureCoords;
in vec3 normal;

out vec2 f_textureCoord;
out vec3 surfaceNormal;
out vec3 toLightVector[4];

uniform mat4 transformationMatrix;  //do ustalania pozycji każdego z obiektów
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition[4];
void main(void)
{
    vec4 worldPosition = transformationMatrix * vec4(v_position,1.0);
    gl_Position =  projectionMatrix * viewMatrix * worldPosition;
    f_textureCoord = v_textureCoords;
    surfaceNormal = (transformationMatrix* vec4(normal,0.0)).xyz;
    for(int i=0;i<4;i++){
        toLightVector[i] = lightPosition[i] - worldPosition.xyz;
    }

}